
var strVar = "";
    strVar += "## 设置多主题\n";
    strVar += "ColorUI支持多主题方案,如果你项目中不需要多主题,你可以在`coloui/scss/_var.scss` 中设置 `$enable-theme` 来关闭多主题的编译,以减少冗余代码。\n";
    strVar += "\n";
    strVar += " ```css\n";
    strVar += "$enable-theme:     false !default; \n";
    strVar += " ```\n";
    strVar += "## 使用之前\n";
    strVar += " 使用多主题必须使用`<cu-sys><\/cu-sys>` 组件来包裹你的页面代码,这样样式才能生效。\n";
    strVar += " ```html\n";
    strVar += " <template>\n";
    strVar += "	<cu-sys>\n";
    strVar += "		<!--  你的页面代码-->\n";
    strVar += "	<\/cu-sys>\n";
    strVar += " <\/template>\n";
    strVar += " ```\n";
    strVar += " 默认主题是`theme-light`,colorui自带有`theme-light`雅白,`theme-dark`酷黑,`theme-lightblue`浅蓝,`theme-darkblue`深蓝,`theme-auto`自动。\n";
    strVar += " \n";
    strVar += " 酷黑和深蓝都是深色主题,自动主题是根据 css`@media (prefers-color-scheme: xx)` 来判断当前环境是深色还是浅色模式,以使用`theme-light`或者`theme-dark`主题。\n";
    strVar += " \n";
    strVar += " 如果你想在深色模式下使用其他主题,你可以在`coloui/scss/theme/ _style.scss` 中设置\n";
    strVar += " ```css\n";
    strVar += " @media (prefers-color-scheme: dark) {\n";
    strVar += "	.theme-auto {\n";
    strVar += "		@include theme-XXX;\n";
    strVar += "	}\n";
    strVar += " }\n";
    strVar += " ```\n";
    strVar += "## 切换主题\n";
    strVar += "切换主题是`Vuex`+`Storage`的方案。\n";
    strVar += "`this.sys_theme` 可以得到当前主题的名称。\n";
    strVar += "`this.sys_mode` 可以得到当前主题的深浅（light/dark)。\n";
    strVar += "切换主题的方法：\n";
    strVar += "```js\n";
    strVar += "this.$store.commit('setTheme', '主题名称');";
    strVar += "```\n";
    strVar += "## 添加一个自定义主题\n";
    strVar += "1.在`coloui/scss/theme/` 目录下复制一个主题文件,并重命名,如果是浅色主题,名称里请包含`light`字段,如果是深色主题,名称里请包含`dark`字段,如:`_lightred.scss`.这将影响到状态栏的配色以及深浅相关的参数获取\n";
    strVar += "2.更改文件`_lightred.scss`内的名称以及相关配置：\n";
    strVar += "```\n";
    strVar += "@mixin theme-lightred {\n";
    strVar += "	···\n";
    strVar += "} \n";
    strVar += "```\n";
    strVar += "3.在`coloui/scss/theme/ _style.scss` 中添加：\n";
    strVar += "```\n";
    strVar += "@if $enable-theme {\n";
    strVar += "	.theme-lightred {\n";
    strVar += "		@include theme-lightred;\n";
    strVar += "	}\n";
    strVar += "	···\n";
    strVar += "}\n";
    strVar += "```\n";
    strVar += "## 主题配色\n";
    strVar += "\n";
    strVar += "多主题是采用css`var()`来定义颜色的。你可以在内联样式,和页面配置的样式中使用`var()`。\n";
    strVar += "```css\n";
    strVar += ".my-primary{\n";
    strVar += "	color:var(--main-a);\n";
    strVar += "}\n";
    strVar += "```\n";
    strVar += "```html\n";
    strVar += "<view style=\"color:var(--main-a);\"><\/view>\n";
    strVar += "```\n";
    strVar += "不同的主题对应的变量颜色也不同,不同的变量控制着不同的层级颜色,按照你项目的需求来使用这些变量：\n";
    strVar += "```\n";
    strVar += "--main-a:      主色\n";
    strVar += "--main-b:      备选色 \n";
    strVar += "--main-c:      备选色 \n";
    strVar += "--main-d:      备选色 \n";
    strVar += "--main-e:      主色的识别色\n";
    strVar += "\n";	
    strVar += "--page-bg:       页面背景色\n";
    strVar += "--page-bg-sub:   页面背景备选色\n";
    strVar += "--box-bg:        内容背景色\n";
    strVar += "--box-bg-sub:    内容背景备选色 \n";
    strVar += "--box-bg:       菜单背景色\n";
    strVar += "--box-bg-sub:   菜单背景备选色\n";
    strVar += "\n";
    strVar += "--border-color:  定义边框颜色。\n";
    strVar += "\n";
    strVar += "--text-{x}:      定义文字层级颜色。\n";
    strVar += "\n";
    strVar += "// 代码颜色\n";
    strVar += "--code-color:     定义代码文字颜色。\n";
    strVar += "--code-bg-color:  定义行内代码背景颜色。\n";
    strVar += "--pre-bg-color:   定义块级代码背景颜色。\n";
    strVar += "\n";
    strVar += "```\n";
	strVar += "## 相关类名\n";
	strVar += "```css\n";
    strVar += ".main-{a,b,c,d,e}-bg{\n";
    strVar += "  对应主色层级的背景色\n";
    strVar += "}\n";
    strVar += ".main-{a,b,c,d,e}-text{\n";
    strVar += "  对应主色层级的文字色\n";
    strVar += "}\n";
    strVar += ".text-{a,b,c,d,e}{\n";
    strVar += "  对应文字层级的文字色\n";
    strVar += "}\n";
    strVar += ".main-{a,b,c,d}-box{\n";
    strVar += "  对应主色层级的背景色\n";
    strVar += "  对应主色e层级的文字色\n";
    strVar += "}\n";
    strVar += ".page-bg,.box-bg,.box-bg,.page-bg-sub,.box-bg-sub,.box-bg-sub{\n";
    strVar += "  对应的背景色\n";
    strVar += "}\n";
    strVar += "```\n";
	strVar += "## 参考\n";
	

export default strVar
	